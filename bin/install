#!/usr/bin/env bash

set -eu
[ "${BASH_VERSINFO[0]}" -ge 3 ] && set -o pipefail

die () {
    echo "$1"
    exit 1
}

get_download_file_path() {
    local install_type=$1
    local version=$2
    local tmp_download_dir=$3

    local pkg_name="io-${install_type}-${version}"

    echo "$tmp_download_dir/$pkg_name"
}

clone_source_repository() {
    local install_type=$1
    local version=$2
    local download_path=$3
    local clone_url="https://github.com/IoLanguage/io"

    git clone --recursive --branch "$version" --depth 1 $clone_url "$download_path"
}

install_io () {
    local install_type=$1
    local version=$2
    local install_path=$3
    local tmp_download_dir
    tmp_download_dir=$(mktemp -dt io_build_XXXXXX)

    local source_path
    source_path=$(get_download_file_path "$install_type" "$version" "$tmp_download_dir")

    clone_source_repository "$install_type" "$version" "$source_path"

    (
        cd "$source_path"

        if [[ -z "${WITH_IO_ADDONS:-}" ]]; then
            sed -i.bak "s|add_subdirectory(addons)|#add_subdirectory(addons)|" CMakeLists.txt
        fi

        cmake -DCMAKE_INSTALL_PREFIX="$install_path" -DWITHOUT_EERIE=1
        make install
    )
}

install_io "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
